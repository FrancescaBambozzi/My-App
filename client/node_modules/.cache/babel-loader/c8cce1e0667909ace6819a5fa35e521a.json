{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bambo\\\\OneDrive\\\\Desktop\\\\Travel App\\\\itinerary-app\\\\client\\\\src\\\\components\\\\containers\\\\City.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass City extends Component {\n  render() {\n    const city = this.props.city ? React.createElement(\"div\", {\n      className: \"city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, this.props.city.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, this.props.city.country)) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"Loading City..\");\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, city);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  let id = ownProps.match.params.city_id;\n  return {\n    city: state.cities.find(city => city.id === id)\n  };\n};\n\nexport default connect(mapStateToProps)(City);","map":{"version":3,"sources":["C:/Users/bambo/OneDrive/Desktop/Travel App/itinerary-app/client/src/components/containers/City.js"],"names":["React","Component","connect","City","render","city","props","name","country","mapStateToProps","state","ownProps","id","match","params","city_id","cities","find"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAC7BG,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAX,GACT;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKC,KAAL,CAAWD,IAAX,CAAgBE,IAArB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKD,KAAL,CAAWD,IAAX,CAAgBG,OAApB,CAFJ,CADS,GAMT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ;AASA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,IADL,CADJ;AAMH;;AAjB4B;;AAoB7B,MAAMI,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,MAAIC,EAAE,GAAGD,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBC,OAA/B;AACA,SAAO;AACHV,IAAAA,IAAI,EAAEK,KAAK,CAACM,MAAN,CAAaC,IAAb,CAAkBZ,IAAI,IAAIA,IAAI,CAACO,EAAL,KAAYA,EAAtC;AADH,GAAP;AAGH,CALD;;AAOA,eAAeV,OAAO,CAACO,eAAD,CAAP,CAAyBN,IAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nclass City extends Component {\r\nrender() {\r\n    const city = this.props.city ? (\r\n        <div className=\"city\">\r\n            <h3>{this.props.city.name}</h3>\r\n            <p>{this.props.city.country}</p>\r\n        </div>\r\n    ) : (\r\n        <div>Loading City..</div>\r\n    )\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {city}\r\n        </div>\r\n    )\r\n  \r\n}\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    let id = ownProps.match.params.city_id;\r\n    return {\r\n        city: state.cities.find(city => city.id === id)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(City);"]},"metadata":{},"sourceType":"module"}