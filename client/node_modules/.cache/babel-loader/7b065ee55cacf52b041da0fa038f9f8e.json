{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bambo\\\\OneDrive\\\\Desktop\\\\travel-app\\\\itinerary-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport '../src/index.css';\nimport Toolbar from '../Toolbar/Toolbar';\nimport SideDrawer from '../SideDrawer/SideDrawer';\nimport Backdrop from '../SideDrawer/Backdrop';\nimport Cities from '../src/components/containers/Cities';\nimport LandingPage from '../src/components/containers/LandingPage';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sideDrawerOpen: false\n    };\n\n    this.drawerToggleClickHandle = () => {\n      //pass it as prop (reference) to the component that hold the button that fire the action <Toolbar/>*/\n      this.setState(prevState => {\n        return {\n          sideDrawerOpen: !prevState.sideDrawerOpen\n        }; //set to be the OPPOSITE of the previous state\n      });\n    };\n\n    this.backDropCloseHandler = () => {\n      this.setState({\n        sideDrawerOpen: false\n      }); //don't need to set a prevState beacuse it has to handle a function that always close the sideDrawer\n    };\n  }\n\n  render() {\n    let backdrop;\n\n    if (this.state.sideDrawerOpen) {\n      //initially we don't see the the 2 components because state is set to false*/\n      backdrop = React.createElement(Backdrop, {\n        clickToCloseSlider: this.backDropCloseHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"landing-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      drawerClickHandler: this.drawerToggleClickHandle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(SideDrawer, {\n      show: this.state.sideDrawerOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), backdrop);\n  }\n\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: LandingPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/cities\",\n      component: Cities,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/bambo/OneDrive/Desktop/travel-app/itinerary-app/src/App.js"],"names":["React","Component","Toolbar","SideDrawer","Backdrop","Cities","LandingPage","BrowserRouter","Route","App","state","sideDrawerOpen","drawerToggleClickHandle","setState","prevState","backDropCloseHandler","render","backdrop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kBAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,SAASC,aAAT,EAAwBC,KAAxB,QAAqC,kBAArC;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BS,KAD0B,GAClB;AACNC,MAAAA,cAAc,EAAE;AADV,KADkB;;AAAA,SAI1BC,uBAJ0B,GAIA,MAAM;AAAE;AAChC,WAAKC,QAAL,CAAeC,SAAD,IAAe;AAC3B,eAAO;AAAEH,UAAAA,cAAc,EAAE,CAACG,SAAS,CAACH;AAA7B,SAAP,CAD2B,CAC2B;AACvD,OAFD;AAGD,KARyB;;AAAA,SAS1BI,oBAT0B,GASH,MAAM;AAC3B,WAAKF,QAAL,CAAc;AAAEF,QAAAA,cAAc,EAAE;AAAlB,OAAd,EAD2B,CACe;AAC3C,KAXyB;AAAA;;AAY1BK,EAAAA,MAAM,GAAG;AACP,QAAIC,QAAJ;;AAEA,QAAI,KAAKP,KAAL,CAAWC,cAAf,EAA+B;AAAE;AAC/BM,MAAAA,QAAQ,GAAG,oBAAC,QAAD;AAAU,QAAA,kBAAkB,EAAE,KAAKF,oBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX;AACD;;AACD,WACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,kBAAkB,EAAE,KAAKH,uBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWC,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGGM,QAHH,CADF;AAOD;;AACDD,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEV,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAED,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAjCyB;;AAoC5B,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport '../src/index.css'\nimport Toolbar from '../Toolbar/Toolbar'\nimport SideDrawer from '../SideDrawer/SideDrawer'\nimport Backdrop from '../SideDrawer/Backdrop'\nimport Cities from '../src/components/containers/Cities'\nimport LandingPage from '../src/components/containers/LandingPage'\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nclass App extends Component {\n  state = {\n    sideDrawerOpen: false\n  };\n  drawerToggleClickHandle = () => { //pass it as prop (reference) to the component that hold the button that fire the action <Toolbar/>*/\n    this.setState((prevState) => {\n      return { sideDrawerOpen: !prevState.sideDrawerOpen }; //set to be the OPPOSITE of the previous state\n    })\n  };\n  backDropCloseHandler = () => {\n    this.setState({ sideDrawerOpen: false }); //don't need to set a prevState beacuse it has to handle a function that always close the sideDrawer\n  }\n  render() {\n    let backdrop;\n\n    if (this.state.sideDrawerOpen) { //initially we don't see the the 2 components because state is set to false*/\n      backdrop = <Backdrop clickToCloseSlider={this.backDropCloseHandler} />\n    }\n    return (\n      <div className=\"landing-container\" >\n        <Toolbar drawerClickHandler={this.drawerToggleClickHandle} />\n        <SideDrawer show={this.state.sideDrawerOpen} />\n        {backdrop}\n      </div>\n    )\n  }\n  render() {\n    return (\n      <BrowserRouter>\n        <Route exact path='/' component={LandingPage} />\n        <Route path='/cities' component={Cities} />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}