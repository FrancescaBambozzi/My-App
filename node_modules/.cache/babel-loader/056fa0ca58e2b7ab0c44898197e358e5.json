{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bambo\\\\OneDrive\\\\Desktop\\\\Travel App\\\\itinerary-app\\\\src\\\\components\\\\containers\\\\LandingPage.js\";\nimport React, { Component } from 'react';\nimport Toolbar from '../Toolbar/Toolbar';\nimport SideDrawer from '../SideDrawer/SideDrawer';\nimport Backdrop from '../SideDrawer/Backdrop';\nimport LandingContent from '../Contents/LandingContent';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Cities from '../src/components/containers/Cities';\n\nclass LandingPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sideDrawerOpen: false\n    };\n\n    this.drawerToggleClickHandle = () => {\n      //pass it as prop (reference) to the component that hold the button that fire the action <Toolbar/>*/\n      this.setState(prevState => {\n        return {\n          sideDrawerOpen: !prevState.sideDrawerOpen\n        }; //set to be the OPPOSITE of the previous state\n      });\n    };\n\n    this.backDropCloseHandler = () => {\n      this.setState({\n        sideDrawerOpen: false\n      }); //don't need to set a prevState beacuse it has to handle a function that always close the sideDrawer\n    };\n  }\n\n  render() {\n    let backdrop;\n\n    if (this.state.sideDrawerOpen) {\n      //initially we don't see the the 2 components because state is set to false*/\n      backdrop = React.createElement(Backdrop, {\n        clickToCloseSlider: this.backDropCloseHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"landing-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      drawerClickHandler: this.drawerToggleClickHandle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(SideDrawer, {\n      show: this.state.sideDrawerOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), backdrop, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: LandingPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/cities\",\n      component: Cities,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })), React.createElement(LandingContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default LandingPage;","map":{"version":3,"sources":["C:/Users/bambo/OneDrive/Desktop/Travel App/itinerary-app/src/components/containers/LandingPage.js"],"names":["React","Component","Toolbar","SideDrawer","Backdrop","LandingContent","BrowserRouter","Route","Cities","LandingPage","state","sideDrawerOpen","drawerToggleClickHandle","setState","prevState","backDropCloseHandler","render","backdrop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,SAASC,aAAT,EAAwBC,KAAxB,QAAqC,kBAArC;AACA,OAAOC,MAAP,MAAmB,qCAAnB;;AAEA,MAAMC,WAAN,SAA0BR,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCS,KADgC,GACxB;AACJC,MAAAA,cAAc,EAAE;AADZ,KADwB;;AAAA,SAIhCC,uBAJgC,GAIN,MAAM;AAAE;AAC9B,WAAKC,QAAL,CAAeC,SAAD,IAAe;AACzB,eAAO;AAAEH,UAAAA,cAAc,EAAE,CAACG,SAAS,CAACH;AAA7B,SAAP,CADyB,CAC6B;AACzD,OAFD;AAGH,KAR+B;;AAAA,SAShCI,oBATgC,GAST,MAAM;AACzB,WAAKF,QAAL,CAAc;AAAEF,QAAAA,cAAc,EAAE;AAAlB,OAAd,EADyB,CACiB;AAC7C,KAX+B;AAAA;;AAYhCK,EAAAA,MAAM,GAAG;AACL,QAAIC,QAAJ;;AAEA,QAAI,KAAKP,KAAL,CAAWC,cAAf,EAA+B;AAAE;AAC7BM,MAAAA,QAAQ,GAAG,oBAAC,QAAD;AAAU,QAAA,kBAAkB,EAAE,KAAKF,oBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX;AACH;;AACD,WACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,kBAAkB,EAAE,KAAKH,uBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWC,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGKM,QAHL,EAII,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAER,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAED,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ,EAQI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADJ;AAYH;;AA9B+B;;AAiCpC,eAAeC,WAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport Toolbar from '../Toolbar/Toolbar'\r\nimport SideDrawer from '../SideDrawer/SideDrawer'\r\nimport Backdrop from '../SideDrawer/Backdrop'\r\nimport LandingContent from '../Contents/LandingContent'\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\nimport Cities from '../src/components/containers/Cities'\r\n\r\nclass LandingPage extends Component {\r\n    state = {\r\n        sideDrawerOpen: false\r\n    };\r\n    drawerToggleClickHandle = () => { //pass it as prop (reference) to the component that hold the button that fire the action <Toolbar/>*/\r\n        this.setState((prevState) => {\r\n            return { sideDrawerOpen: !prevState.sideDrawerOpen }; //set to be the OPPOSITE of the previous state\r\n        })\r\n    };\r\n    backDropCloseHandler = () => {\r\n        this.setState({ sideDrawerOpen: false }); //don't need to set a prevState beacuse it has to handle a function that always close the sideDrawer\r\n    }\r\n    render() {\r\n        let backdrop;\r\n\r\n        if (this.state.sideDrawerOpen) { //initially we don't see the the 2 components because state is set to false*/\r\n            backdrop = <Backdrop clickToCloseSlider={this.backDropCloseHandler} />\r\n        }\r\n        return (\r\n            <div className=\"landing-container\" >\r\n                <BrowserRouter>\r\n                    <Toolbar drawerClickHandler={this.drawerToggleClickHandle} />\r\n                    <SideDrawer show={this.state.sideDrawerOpen} />\r\n                    {backdrop}\r\n                    <Route exact path='/' component={LandingPage} />\r\n                    <Route path='/cities' component={Cities} />\r\n                </BrowserRouter>\r\n                <LandingContent />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LandingPage;"]},"metadata":{},"sourceType":"module"}